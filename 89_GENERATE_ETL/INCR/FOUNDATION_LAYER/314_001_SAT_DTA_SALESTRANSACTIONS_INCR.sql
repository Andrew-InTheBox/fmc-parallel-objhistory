CREATE OR REPLACE PROCEDURE "ColruytFMC_PROC"."SAT_DTA_SALESTRANSACTIONS_INCR"()
 RETURNS varchar 
LANGUAGE JAVASCRIPT 

AS $$ 
/*
 __     __          _ _                           _      __  ___  __   __   
 \ \   / /_ _ _   _| | |_ ___ ____   ___  ___  __| |     \ \/ _ \/ /  /_/   
  \ \ / / _` | | | | | __/ __|  _ \ / _ \/ _ \/ _` |      \/ / \ \/ /\      
   \ V / (_| | |_| | | |_\__ \ |_) |  __/  __/ (_| |      / / \/\ \/ /      
    \_/ \__,_|\__,_|_|\__|___/ .__/ \___|\___|\__,_|     /_/ \/_/\__/       
                             |_|                                            

Vaultspeed version: 5.7.2.5, generation date: 2024/11/05 20:06:07
DV_NAME: DVCOL - Release: Four(4) - Comment: add product table - Release date: 2024/11/05 20:02:26, 
BV release: init(1) - Comment: initial release - Release date: 2024/11/05 20:02:44, 
SRC_NAME: TEST_FMC - Release: TEST_FMC(5) - Comment: add table - Release date: 2024/11/05 20:01:30
 */



var truncate_SAT_TEMP_TGT = snowflake.createStatement( {sqlText: `
	TRUNCATE TABLE "TEST_FMC_STG"."SAT_DTA_SALES_TRANSACTIONS_TMP";
`} ).execute();


var SAT_TEMP_TGT = snowflake.createStatement( {sqlText: `
	INSERT INTO "TEST_FMC_STG"."SAT_DTA_SALES_TRANSACTIONS_TMP"(
		 "SALES_TRANSACTIONS_HKEY"
		,"LOAD_DATE"
		,"LOAD_CYCLE_ID"
		,"RECORD_TYPE"
		,"SOURCE"
		,"EQUAL"
		,"HASH_DIFF"
		,"DELETE_FLAG"
		,"CDC_SIMULATED"
		,"TRANSACTION_ID"
		,"TRANSACTION_DATE"
		,"TRANSACTION_AMOUNT"
	)
	WITH "DIST_STG" AS 
	( 
		SELECT DISTINCT 
 			  "STG_DIS_SRC"."SALES_TRANSACTIONS_HKEY" AS "SALES_TRANSACTIONS_HKEY"
			, "STG_DIS_SRC"."LOAD_CYCLE_ID" AS "LOAD_CYCLE_ID"
		FROM "TEST_FMC_STG"."SALES_TRANSACTIONS" "STG_DIS_SRC"
		WHERE  "STG_DIS_SRC"."RECORD_TYPE" = 'S'
	)
	, "TEMP_TABLE_SET" AS 
	( 
		SELECT 
			  "STG_TEMP_SRC"."SALES_TRANSACTIONS_HKEY" AS "SALES_TRANSACTIONS_HKEY"
			, "STG_TEMP_SRC"."LOAD_DATE" AS "LOAD_DATE"
			, "STG_TEMP_SRC"."LOAD_CYCLE_ID" AS "LOAD_CYCLE_ID"
			, TO_TIMESTAMP(NULL, 'DD/MM/YYYY HH24:MI:SS') AS "LOAD_END_DATE"
			, "STG_TEMP_SRC"."RECORD_TYPE" AS "RECORD_TYPE"
			, 'STG' AS "SOURCE"
			, 1 AS "ORIGIN_ID"
			, UPPER(SHA1_HEX(COALESCE(RTRIM( UPPER(REPLACE(COALESCE(TRIM( TO_CHAR("STG_TEMP_SRC"."TRANSACTION_DATE", 
				'DD/MM/YYYY HH24:MI:SS')),'~'),'\\#','\\\\' || '\\#'))|| '\\#' ||  UPPER(REPLACE(COALESCE(TRIM( TO_CHAR("STG_TEMP_SRC"."TRANSACTION_AMOUNT")),'~'),'\\#','\\\\' || '\\#'))|| '\\#','\\#' || '~'),'~') )) AS "HASH_DIFF"
			, CASE WHEN "STG_TEMP_SRC"."__$operation" = 'D' THEN CAST('Y' AS VARCHAR(3)) ELSE CAST('N' AS VARCHAR(3)) END AS "DELETE_FLAG"
			, "STG_TEMP_SRC"."CDC_SIMULATED" AS "CDC_SIMULATED"
			, "STG_TEMP_SRC"."TRANSACTION_ID" AS "TRANSACTION_ID"
			, "STG_TEMP_SRC"."TRANSACTION_DATE" AS "TRANSACTION_DATE"
			, "STG_TEMP_SRC"."TRANSACTION_AMOUNT" AS "TRANSACTION_AMOUNT"
		FROM "TEST_FMC_STG"."SALES_TRANSACTIONS" "STG_TEMP_SRC"
		WHERE  "STG_TEMP_SRC"."RECORD_TYPE" = 'S'
		UNION ALL 
		SELECT 
			  "SAT_SRC"."SALES_TRANSACTIONS_HKEY" AS "SALES_TRANSACTIONS_HKEY"
			, "SAT_SRC"."LOAD_DATE" AS "LOAD_DATE"
			, "SAT_SRC"."LOAD_CYCLE_ID" AS "LOAD_CYCLE_ID"
			, MAX("SAT_SRC"."LOAD_DATE")OVER( PARTITION BY "SAT_SRC"."SALES_TRANSACTIONS_HKEY") AS "LOAD_END_DATE"
			, 'SAT' AS "RECORD_TYPE"
			, 'SAT' AS "SOURCE"
			, 0 AS "ORIGIN_ID"
			, "SAT_SRC"."HASH_DIFF" AS "HASH_DIFF"
			, "SAT_SRC"."DELETE_FLAG" AS "DELETE_FLAG"
			, "SAT_SRC"."CDC_SIMULATED" AS "CDC_SIMULATED"
			, "SAT_SRC"."TRANSACTION_ID" AS "TRANSACTION_ID"
			, "SAT_SRC"."TRANSACTION_DATE" AS "TRANSACTION_DATE"
			, "SAT_SRC"."TRANSACTION_AMOUNT" AS "TRANSACTION_AMOUNT"
		FROM "DV_FL"."SAT_DTA_SALES_TRANSACTIONS" "SAT_SRC"
		INNER JOIN "DIST_STG" "DIST_STG" ON  "SAT_SRC"."SALES_TRANSACTIONS_HKEY" = "DIST_STG"."SALES_TRANSACTIONS_HKEY"
	)
	SELECT 
		  "TEMP_TABLE_SET"."SALES_TRANSACTIONS_HKEY" AS "SALES_TRANSACTIONS_HKEY"
		, "TEMP_TABLE_SET"."LOAD_DATE" AS "LOAD_DATE"
		, "TEMP_TABLE_SET"."LOAD_CYCLE_ID" AS "LOAD_CYCLE_ID"
		, "TEMP_TABLE_SET"."RECORD_TYPE" AS "RECORD_TYPE"
		, "TEMP_TABLE_SET"."SOURCE" AS "SOURCE"
		, CASE WHEN "TEMP_TABLE_SET"."SOURCE" = 'STG' AND "TEMP_TABLE_SET"."DELETE_FLAG"::varchar || "TEMP_TABLE_SET"."HASH_DIFF"::varchar =
			LAG( "TEMP_TABLE_SET"."DELETE_FLAG"::varchar || "TEMP_TABLE_SET"."HASH_DIFF"::varchar,1)OVER(PARTITION BY "TEMP_TABLE_SET"."SALES_TRANSACTIONS_HKEY" ORDER BY "TEMP_TABLE_SET"."LOAD_DATE","TEMP_TABLE_SET"."ORIGIN_ID")THEN 1 ELSE 0 END AS "EQUAL"
		, "TEMP_TABLE_SET"."HASH_DIFF" AS "HASH_DIFF"
		, "TEMP_TABLE_SET"."DELETE_FLAG" AS "DELETE_FLAG"
		, "TEMP_TABLE_SET"."CDC_SIMULATED" AS "CDC_SIMULATED"
		, "TEMP_TABLE_SET"."TRANSACTION_ID" AS "TRANSACTION_ID"
		, "TEMP_TABLE_SET"."TRANSACTION_DATE" AS "TRANSACTION_DATE"
		, "TEMP_TABLE_SET"."TRANSACTION_AMOUNT" AS "TRANSACTION_AMOUNT"
	FROM "TEMP_TABLE_SET" "TEMP_TABLE_SET"
	WHERE  "TEMP_TABLE_SET"."SOURCE" = 'STG' OR("TEMP_TABLE_SET"."LOAD_DATE" = "TEMP_TABLE_SET"."LOAD_END_DATE" AND "TEMP_TABLE_SET"."SOURCE" = 'SAT')
	;
`} ).execute();

var SAT_INUR_TGT = snowflake.createStatement( {sqlText: `
	INSERT INTO "DV_FL"."SAT_DTA_SALES_TRANSACTIONS"(
		 "SALES_TRANSACTIONS_HKEY"
		,"LOAD_DATE"
		,"LOAD_CYCLE_ID"
		,"HASH_DIFF"
		,"DELETE_FLAG"
		,"CDC_SIMULATED"
		,"TRANSACTION_ID"
		,"TRANSACTION_DATE"
		,"TRANSACTION_AMOUNT"
	)
	SELECT 
		  "SAT_TEMP_SRC_INUR"."SALES_TRANSACTIONS_HKEY" AS "SALES_TRANSACTIONS_HKEY"
		, "SAT_TEMP_SRC_INUR"."LOAD_DATE" AS "LOAD_DATE"
		, "SAT_TEMP_SRC_INUR"."LOAD_CYCLE_ID" AS "LOAD_CYCLE_ID"
		, "SAT_TEMP_SRC_INUR"."HASH_DIFF" AS "HASH_DIFF"
		, "SAT_TEMP_SRC_INUR"."DELETE_FLAG" AS "DELETE_FLAG"
		, "SAT_TEMP_SRC_INUR"."CDC_SIMULATED" AS "CDC_SIMULATED"
		, "SAT_TEMP_SRC_INUR"."TRANSACTION_ID" AS "TRANSACTION_ID"
		, "SAT_TEMP_SRC_INUR"."TRANSACTION_DATE" AS "TRANSACTION_DATE"
		, "SAT_TEMP_SRC_INUR"."TRANSACTION_AMOUNT" AS "TRANSACTION_AMOUNT"
	FROM "TEST_FMC_STG"."SAT_DTA_SALES_TRANSACTIONS_TMP" "SAT_TEMP_SRC_INUR"
	WHERE  "SAT_TEMP_SRC_INUR"."SOURCE" = 'STG' AND "SAT_TEMP_SRC_INUR"."EQUAL" = 0
	;
`} ).execute();


return "Done.";$$;
 
 
